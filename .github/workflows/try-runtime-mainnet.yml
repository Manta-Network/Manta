name: Try-runtime check against latest mainnet state
on:
  # NOTE: The try-runtime tool expects your local chain's runtime version to match the version of the chain that
  # you're testing against. In the default case Calamari mainnet. That's why this CI workflow has a manual trigger.
  workflow_dispatch:
    inputs:
      prod_url:
        description: The WebSocket url of the reference node
        default: wss://ws.manta.systems:443
        required: true
      runtime:
        description: The runtime of the local node - use `manta` or `calamari` only.
        default: manta
        required: true
env:
  AWS_INSTANCE_SSH_PUBLIC_KEY: ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIPb24HEQ++aNFWaqVyMtIs6GotUB8R+q61XOoI2z6uMj
  AWS_REGION: us-east-1
  AWS_SUBNET_ID: subnet-08c26caf0a52b7c19
  AWS_SECURITY_GROUP_ID: sg-0315bffea9042ac9b
  AWS_INSTANCE_TYPE: c5d.metal
  AWS_INSTANCE_ROOT_VOLUME_SIZE: 128
  AWS_IMAGE_SEARCH_PATTERN: ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-*
  AWS_IMAGE_SEARCH_OWNERS: '["099720109477"]'
  PROD_URL: ${{github.event.inputs.prod_url}}
  RUNTIME: ${{github.event.inputs.runtime}}
jobs:
  start-checks:
    timeout-minutes: 120
    runs-on: ubuntu-20.04
    outputs:
      runner-label: ${{ steps.start-self-hosted-runner.outputs.runner-label }}
      aws-region: ${{ steps.start-self-hosted-runner.outputs.aws-region }}
      aws-instance-id: ${{ steps.start-self-hosted-runner.outputs.aws-instance-id }}
    steps:
      - id: start-self-hosted-runner
        uses: audacious-network/aws-github-runner@v1.0.33
        with:
          mode: start
          github-token: ${{ secrets.SELF_HOSTED_RUNNER_TOKEN  }}
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
          aws-instance-type: ${{ env.AWS_INSTANCE_TYPE }}
          aws-instance-root-volume-size: ${{ env.AWS_INSTANCE_ROOT_VOLUME_SIZE }}
          aws-image-search-pattern: ${{ env.AWS_IMAGE_SEARCH_PATTERN }}
          aws-image-search-owners: ${{ env.AWS_IMAGE_SEARCH_OWNERS }}
      - uses: actions/checkout@v2
      - name: install sccache
        env:
          SCCACHE_RELEASE_URL: https://github.com/mozilla/sccache/releases/download
          SCCACHE_VERSION: v0.2.15
        run: |
          SCCACHE_FILE=sccache-$SCCACHE_VERSION-x86_64-unknown-linux-musl
          mkdir -p $HOME/.local/bin
          curl -L "$SCCACHE_RELEASE_URL/$SCCACHE_VERSION/$SCCACHE_FILE.tar.gz" | tar xz
          mv -f $SCCACHE_FILE/sccache $HOME/.local/bin/sccache
          chmod +x $HOME/.local/bin/sccache
          echo "$HOME/.local/bin" >> $GITHUB_PATH
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH
      - name: cache cargo registry
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            cargo-
      - name: cache sccache
        uses: actions/cache@v2
        continue-on-error: false
        with:
          path: /home/runner/.cache/sccache
          key: sccache-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            sccache-
      - name: start sccache server
        run: sccache --start-server
      - name: init
        run: |
          sudo apt update
          sudo apt install -y pkg-config libssl-dev protobuf-compiler
          protoc --version
          curl -s https://sh.rustup.rs -sSf | sh -s -- -y
          source ${HOME}/.cargo/env
          rustup toolchain install nightly-2023-03-03
          rustup default nightly-2023-03-03
          rustup target add wasm32-unknown-unknown
      - name: Build Binary
        env:
          RUST_BACKTRACE: full
          RUSTC_WRAPPER: sccache
          SCCACHE_CACHE_SIZE: 2G
          SCCACHE_DIR: /home/runner/.cache/sccache
        run: |
          source ${HOME}/.cargo/env
          RUSTC_BOOTSTRAP=1 cargo build --release --features=try-runtime
          chmod a+x target/release/manta
      - name: move bin
        run: |
          mkdir -p $HOME/.local/bin
          mv target/release/manta $HOME/.local/bin/
          mv target/release/wbuild/${{ env.RUNTIME }}-runtime/${{ env.RUNTIME }}_runtime.compact.compressed.wasm $HOME/.local/bin/runtime.wasm
          chmod +x $HOME/.local/bin/manta
          echo "$HOME/.local/bin" >> $GITHUB_PATH
      - uses: actions/checkout@v2
        with:
          repository: Manta-Network/Dev-Tools
          path: dev-tools-calamari
      - name: execute try-runtime
        run: |
          cd ${{ github.workspace }}/dev-tools-calamari/check-finalized-block
          yarn install
          yarn
          latest_hash=$(node get-latest-block-hash --address=$PROD_URL)
          $HOME/.local/bin/manta try-runtime --runtime $HOME/.local/bin/runtime.wasm --chain ${{ env.RUNTIME }}-dev on-runtime-upgrade --checks=all live --at $latest_hash --uri $PROD_URL
      - name: stop sccache server
        run: sccache --stop-server || true
  stop-checks:
    needs: start-checks
    runs-on: ubuntu-20.04
    if: ${{ always() }}
    steps:
      - continue-on-error: true
        uses: audacious-network/aws-github-runner@v1.0.33
        with:
          mode: stop
          github-token: ${{ secrets.SELF_HOSTED_RUNNER_TOKEN  }}
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ needs.start-checks.outputs.aws-region }}
          runner-label: ${{ needs.start-checks.outputs.runner-label }}
          aws-instance-id: ${{ needs.start-checks.outputs.aws-instance-id }}
      - name: discard stopper success/failure
        run: true
