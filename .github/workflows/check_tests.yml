---

# yamllint disable rule:line-length

name: Run Tests

# Controls when the action will run.
# yamllint disable-line rule:truthy
on:
  # Triggers the workflow on push or pull request events
  # but only for the calamari (default) branch.
  pull_request:
    branches: [manta-pc]
  push:
    branches: [ghzlatarev/faster-ci]

env:
  AWS_INSTANCE_SSH_PUBLIC_KEY: ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIPb24HEQ++aNFWaqVyMtIs6GotUB8R+q61XOoI2z6uMj
  AWS_REGION: us-east-1
  AWS_SUBNET_ID: subnet-08c26caf0a52b7c19
  AWS_SECURITY_GROUP_ID: sg-0315bffea9042ac9b
  AWS_INSTANCE_TYPE: c5a.8xlarge # 32 vcpu, 64gb ram, $1.392 hourly
  AWS_INSTANCE_ROOT_VOLUME_SIZE: 64
  AWS_INSTANCE_LIFECYCLE: spot
  AWS_IMAGE_SEARCH_PATTERN: ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-*
  AWS_IMAGE_SEARCH_OWNERS: '["099720109477"]' # canonical

jobs:

  start-builder:
    runs-on: ubuntu-20.04
    outputs:
      runner-label: ${{ steps.start-self-hosted-runner.outputs.runner-label }}
      aws-region: ${{ steps.start-self-hosted-runner.outputs.aws-region }}
      aws-instance-id: ${{ steps.start-self-hosted-runner.outputs.aws-instance-id }}
    steps:
      -
        id: start-self-hosted-runner
        uses: audacious-network/aws-github-runner@v1.0.33
        with:
          mode: start
          github-token: ${{ secrets.GH_SHR_TOKEN }}
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-instance-ssh-public-key: ${{ env.AWS_INSTANCE_SSH_PUBLIC_KEY }}
          aws-region: ${{ env.AWS_REGION }}
          aws-subnet-id: ${{ env.AWS_SUBNET_ID }}
          aws-security-group-id: ${{ env.AWS_SECURITY_GROUP_ID }}
          aws-instance-type: ${{ env.AWS_INSTANCE_TYPE }} # 32 vcpu, 64gb ram, $1.392 hourly
          aws-instance-root-volume-size: ${{ env.AWS_INSTANCE_ROOT_VOLUME_SIZE }}
          aws-instance-lifecycle: ${{ env.AWS_INSTANCE_LIFECYCLE }}
          aws-image-search-pattern: ${{ env.AWS_IMAGE_SEARCH_PATTERN }}
          aws-image-search-owners: ${{ env.AWS_IMAGE_SEARCH_OWNERS }} # canonical
      - uses: actions/checkout@v2

      - name: Run yamllint
        uses: actionshub/yamllint@main

      - name: Set-Up
        run: sudo apt install -y
             cmake pkg-config libssl-dev
             git build-essential clang
             libclang-dev curl

      - name: Install Rustup
        run: |
          curl https://sh.rustup.rs -sSf | sh -s -- -y
          source ~/.cargo/env
          rustup update stable
          rustup update nightly
          rustup target add wasm32-unknown-unknown --toolchain nightly

      - name: Run Tests
        run: |
          cargo test --all-features
