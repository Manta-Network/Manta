name: Transaction Version Update Check
on:
  workflow_dispatch:
    inputs:
      endpoint:
        description: The endpoint to the calamari or manta mainnet.
        default: wss://ws.manta.systems
        required: false
      chain:
        description: The name of the chain under test. Usually, you would pass a dev chain
        default: manta-dev
        required: true
env:
  CHAIN: ${{github.event.inputs.chain}}
  ENDPOINT: ${{github.event.inputs.endpoint}}
  DEBIAN_FRONTEND: noninteractive
jobs:
  start-checks:
    timeout-minutes: 120
    runs-on: runtime
    container:
      image: ubuntu:20.04
    strategy:
      matrix:
        node-version: [16.x]
    steps:
      - uses: actions/checkout@v2
      - uses: borales/actions-yarn@v3.0.0
      - name: install sccache
        env:
          SCCACHE_RELEASE_URL: https://github.com/mozilla/sccache/releases/download
          SCCACHE_VERSION: v0.5.3
        run: |
          apt update
          apt install -y curl
          SCCACHE_FILE=sccache-$SCCACHE_VERSION-x86_64-unknown-linux-musl
          mkdir -p $HOME/.local/bin
          curl -L "$SCCACHE_RELEASE_URL/$SCCACHE_VERSION/$SCCACHE_FILE.tar.gz" | tar xz
          mv -f $SCCACHE_FILE/sccache $HOME/.local/bin/sccache
          chmod +x $HOME/.local/bin/sccache
          echo "$HOME/.local/bin" >> $GITHUB_PATH
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH
      - name: cache cargo registry
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: cargo-registry-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            cargo-registry-
      - name: cache sccache
        uses: actions/cache@v2
        continue-on-error: false
        with:
          path: ~/.cache/sccache
          key: sccache-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            sccache-
      - name: start sccache server
        run: sccache --start-server
      - name: init
        shell: bash
        run: |
          apt update
          apt install -y pkg-config libssl-dev protobuf-compiler curl build-essential clang git
          protoc --version
          apt remove -y '^dotnet-.*'
          apt remove -y '^mongodb-.*'
          apt remove -y '^mysql-.*'
          apt remove -y '^postgresql-*'
          apt remove -y google-cloud-sdk google-chrome-stable firefox powershell mono-devel libgl1-mesa-dri
          apt autoremove -y
          apt clean
          rm -rf /usr/local/lib/android
          rm -rf /usr/share/dotnet
          curl -s https://sh.rustup.rs -sSf | sh -s -- -y
          source ${HOME}/.cargo/env
          rustup toolchain install nightly-2023-03-03
          rustup default nightly-2023-03-03
          rustup target add wasm32-unknown-unknown
      - name: cache cargo build
        uses: actions/cache@v2
        with:
          path: |
            ./target
          key: cargo-build-${{ hashFiles('**/Cargo.toml') }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            cargo-build-${{ hashFiles('**/Cargo.toml') }}-${{ hashFiles('**/Cargo.lock') }}
            cargo-build-
      - name: Build New Binary
        env:
          RUST_BACKTRACE: full
          RUSTC_WRAPPER: sccache
          SCCACHE_CACHE_SIZE: 2G
          SCCACHE_DIR: ~/.cache/sccache
        shell: bash
        run: |
          source ${HOME}/.cargo/env
          RUSTC_BOOTSTRAP=1 cargo build --release
          cp target/release/manta $HOME/manta
          chmod +x $HOME/manta
      - name: Fetch and chmod old release binary
        run: |
          curl -L -o $HOME/polkadot https://github.com/paritytech/polkadot/releases/download/v1.0.0/polkadot
          chmod +x $HOME/polkadot
          ls -ahl $HOME/
      - name: stop sccache server
        run: sccache --stop-server || true
      - name: Install pm2
        run: npm install -g pm2
      - name: Install dasel cli
        run: |
          curl -sSLf "$(curl -sSLf https://api.github.com/repos/tomwright/dasel/releases/latest | grep browser_download_url | grep linux_amd64 | grep -v .gz | cut -d\" -f 4)" -L -o dasel && chmod +x dasel
          mv ./dasel $HOME/.cargo/bin/dasel
          dasel --version
      - uses: actions/checkout@v2
        with:
          repository: paritytech/zombienet
          path: zombienet-tool
      - name: create launch config
        run: |
          ls -ahl ${{ github.workspace }}/zombienet/tests
          cd ${{ github.workspace }}
          dasel put -t string -v $HOME/polkadot -r toml \
            -f ${{ github.workspace }}/zombienet/tests/0003-metadata-diff.toml \
            '.relaychain.default_command'
          dasel put -t string -v $HOME/manta -r toml \
            -f ${{ github.workspace }}/zombienet/tests/0003-metadata-diff.toml \
            '.parachains.[0].collators.[0].command'
          if [[ "$CHAIN" == *"manta"* ]]; then
            dasel put -t int -v 2104 -r toml \
              -f ${{ github.workspace }}/zombienet/tests/0003-metadata-diff.toml \
              '.parachains.[0].id'
            dasel put -t string -v $CHAIN -r toml \
              -f ${{ github.workspace }}/zombienet/tests/0003-metadata-diff.toml \
              '.parachains.[0].chain'
          fi;
          cat ${{ github.workspace }}/zombienet/tests/0003-metadata-diff.toml
      - name: launch testnet
        run: |
          cd ${{ github.workspace }}/zombienet-tool/javascript
          yarn
          npm run build
          pm2 start packages/cli/dist/cli.js --name zombienet \
            --output ${{ github.workspace }}/stdout.log \
            --error ${{ github.workspace }}/stderr.log \
            -- spawn --provider native ${{ github.workspace }}/zombienet/tests/0003-metadata-diff.toml
      - name: Prepare output
        run: |
          VERSION=$($HOME/manta --version)
          echo "Metadata comparison:" >> output.txt
          echo "Date: $(date)" >> output.txt
          echo "Target version: $VERSION" >> output.txt
          echo "Chain: $CHAIN" >> output.txt
          echo "----------------------------------------------------------------------" >> output.txt
      - uses: actions/checkout@v2
        with:
          repository: polkadot-js/tools
          path: tools
      - name: Compare the metadata
        run: |
          echo $ENDPOINT
          cd ${{ github.workspace }}/tools
          yarn
          CMD="yarn run:metadata $ENDPOINT ws://127.0.0.1:9921"
          echo -e "Running:\n$CMD"
          $CMD >> output.txt
          sed -z -i 's/\n\n/\n/g' output.txt
          cat output.txt | egrep -n -i ''
          chmod +x ${{ github.workspace }}/scripts/github/extrinsic-ordering-filter.sh
          SUMMARY=$(${{ github.workspace }}/scripts/github/extrinsic-ordering-filter.sh output.txt)
          echo -e $SUMMARY
          echo -e $SUMMARY >> output.txt
      - name: Show result
        run: |
          cat output.txt
      - name: Stop our local node
        run: pkill manta
      - if: always()
        name: Save output as artifact
        uses: actions/upload-artifact@v2
        with:
          name: ${{ env.CHAIN }}
          path: |
            output.txt
