---

# yamllint disable rule:line-length

name: publish draft releases

# yamllint disable-line rule:truthy
on:
  push:
    branches: [ghzlatarev/srtool-fix-2]
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+*'

env:
  AWS_INSTANCE_SSH_PUBLIC_KEY: ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIPb24HEQ++aNFWaqVyMtIs6GotUB8R+q61XOoI2z6uMj
  AWS_REGION: us-east-1
  AWS_SUBNET_ID: subnet-08c26caf0a52b7c19
  AWS_SECURITY_GROUP_ID: sg-0315bffea9042ac9b
  AWS_INSTANCE_TYPE: c5a.8xlarge  # 32 vcpu, 64gb ram, $1.392 hourly
  AWS_INSTANCE_ROOT_VOLUME_SIZE: 32
  AWS_IMAGE_SEARCH_PATTERN: ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-*
  AWS_IMAGE_SEARCH_OWNERS: '["099720109477"]'  # canonical

jobs:

  get-rust-versions:
    runs-on: ubuntu-20.04
    container:
      image: paritytech/ci-linux:production
    outputs:
      rustc-stable: ${{ steps.get-rust-versions.outputs.stable }}
      rustc-nightly: ${{ steps.get-rust-versions.outputs.nightly }}
    env:
      CARGO_TERM_COLOR: always
    steps:
      -
        id: get-rust-versions
        run: |
          echo "::set-output name=stable::$(rustc +stable --version)"
          echo "::set-output name=nightly::$(rustc +nightly --version)"

  build-runtimes:
    runs-on: ubuntu-20.04
    env:
      CARGO_TERM_COLOR: always
    strategy:
      matrix:
        runtime:
          -
            name: calamari
          -
            name: manta
    steps:
      -
        uses: actions/checkout@v2
      -
        name: cache target dir
        uses: actions/cache@v2
        with:
          path: "${{ github.workspace }}/runtime/${{ matrix.runtime.name }}/target"
          key: srtool-target-${{ matrix.runtime.name }}-${{ github.sha }}
          restore-keys: |
            srtool-target-${{ matrix.runtime.name }}
      -
        name: build runtime
        id: srtool-build
        uses: chevdor/srtool-actions@v0.3.0
        with:
          chain: ${{ matrix.runtime.name }}
      -
        name: persist srtool digest
        run: >
          echo '${{ steps.srtool-build.outputs.json }}' |
          jq > ${{ matrix.runtime.name }}-srtool-output.json
      -
        name: upload srtool json
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.runtime.name }}-srtool-json
          path: ${{ matrix.runtime.name }}-srtool-output.json
      -
        name: upload runtime
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.runtime.name }}-runtime
          path: |
            ${{ steps.srtool-build.outputs.wasm }}
            ${{ steps.srtool-build.outputs.wasm_compressed }}

# yamllint enable rule:line-length
