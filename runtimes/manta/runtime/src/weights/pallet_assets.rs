
//! Autogenerated weights for pallet_assets
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 3.0.0
//! DATE: 2021-04-21, STEPS: `[20, ]`, REPEAT: 10, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! EXECUTION: Some(Wasm), WASM-EXECUTION: Compiled, CHAIN: Some("statemint-dev"), DB CACHE: 128

// Executed Command:
// ./target/release/statemint
// benchmark
// --chain
// statemint-dev
// --execution
// wasm
// --wasm-execution
// compiled
// --pallet
// pallet_assets
// --extrinsic
// *
// --steps
// 20
// --repeat
// 10
// --raw
// --output
// ./


#![allow(unused_parens)]
#![allow(unused_imports)]

use frame_support::{traits::Get, weights::Weight};
use sp_std::marker::PhantomData;

/// Weight functions for pallet_assets.
pub struct WeightInfo<T>(PhantomData<T>);
impl<T: frame_system::Config> pallet_assets::WeightInfo for WeightInfo<T> {
	fn create() -> Weight {
		(68_000_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(1 as Weight))
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
	fn force_create() -> Weight {
		(34_000_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(1 as Weight))
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
	fn destroy(z: u32) -> Weight {
		(0 as Weight)
			// Standard Error: 2_000
			.saturating_add((1_149_000 as Weight).saturating_mul(z as Weight))
			.saturating_add(T::DbWeight::get().reads(2 as Weight))
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
			.saturating_add(T::DbWeight::get().writes((1 as Weight).saturating_mul(z as Weight)))
	}

	// fn destroy(c: u32, s: u32, a: u32, ) -> Weight {
	// 	(0 as Weight)
	// 		// Standard Error: 440_000
	// 		.saturating_add((33_246_000 as Weight).saturating_mul(c as Weight))
	// 		// Standard Error: 440_000
	// 		.saturating_add((47_556_000 as Weight).saturating_mul(s as Weight))
	// 		.saturating_add(T::DbWeight::get().reads(4 as Weight))
	// 		.saturating_add(T::DbWeight::get().reads((2 as Weight).saturating_mul(c as Weight)))
	// 		.saturating_add(T::DbWeight::get().reads((2 as Weight).saturating_mul(s as Weight)))
	// 		.saturating_add(T::DbWeight::get().writes(2 as Weight))
	// 		.saturating_add(T::DbWeight::get().writes((2 as Weight).saturating_mul(c as Weight)))
	// 		.saturating_add(T::DbWeight::get().writes((2 as Weight).saturating_mul(s as Weight)))
	// 		.saturating_add(T::DbWeight::get().writes((1 as Weight).saturating_mul(a as Weight)))
	// }
	fn mint() -> Weight {
		(103_000_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(2 as Weight))
			.saturating_add(T::DbWeight::get().writes(2 as Weight))
	}
	fn burn() -> Weight {
		(115_000_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(2 as Weight))
			.saturating_add(T::DbWeight::get().writes(2 as Weight))
	}
	fn transfer() -> Weight {
		(153_000_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(4 as Weight))
			.saturating_add(T::DbWeight::get().writes(4 as Weight))
	}
	// fn transfer_keep_alive() -> Weight {
	// 	(124_000_000 as Weight)
	// 		.saturating_add(T::DbWeight::get().reads(4 as Weight))
	// 		.saturating_add(T::DbWeight::get().writes(4 as Weight))
	// }
	fn force_transfer() -> Weight {
		(145_000_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(4 as Weight))
			.saturating_add(T::DbWeight::get().writes(4 as Weight))
	}
	fn freeze() -> Weight {
		(49_000_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(2 as Weight))
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
	fn thaw() -> Weight {
		(47_000_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(2 as Weight))
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
	fn freeze_asset() -> Weight {
		(34_000_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(1 as Weight))
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
	fn thaw_asset() -> Weight {
		(34_000_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(1 as Weight))
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
	fn transfer_ownership() -> Weight {
		(39_000_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(2 as Weight))
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
	fn set_team() -> Weight {
		(35_000_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(1 as Weight))
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
	fn set_metadata(_n: u32, s: u32, ) -> Weight {
		(75_032_000 as Weight)
			// Standard Error: 20_000
			.saturating_add((18_000 as Weight).saturating_mul(s as Weight))
			.saturating_add(T::DbWeight::get().reads(2 as Weight))
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
	// fn clear_metadata() -> Weight {
	// 	(70_000_000 as Weight)
	// 		.saturating_add(T::DbWeight::get().reads(2 as Weight))
	// 		.saturating_add(T::DbWeight::get().writes(1 as Weight))
	// }
	// fn force_set_metadata(n: u32, s: u32, ) -> Weight {
	// 	(34_085_000 as Weight)
	// 		// Standard Error: 21_000
	// 		.saturating_add((48_000 as Weight).saturating_mul(n as Weight))
	// 		// Standard Error: 21_000
	// 		.saturating_add((53_000 as Weight).saturating_mul(s as Weight))
	// 		.saturating_add(T::DbWeight::get().reads(2 as Weight))
	// 		.saturating_add(T::DbWeight::get().writes(1 as Weight))
	// }
	// fn force_clear_metadata() -> Weight {
	// 	(73_000_000 as Weight)
	// 		.saturating_add(T::DbWeight::get().reads(2 as Weight))
	// 		.saturating_add(T::DbWeight::get().writes(1 as Weight))
	// }
	// fn force_asset_status() -> Weight {
	// 	(33_000_000 as Weight)
	// 		.saturating_add(T::DbWeight::get().reads(1 as Weight))
	// 		.saturating_add(T::DbWeight::get().writes(1 as Weight))
	// }
	// fn approve_transfer() -> Weight {
	// 	(67_000_000 as Weight)
	// 		.saturating_add(T::DbWeight::get().reads(1 as Weight))
	// 		.saturating_add(T::DbWeight::get().writes(1 as Weight))
	// }
	// fn transfer_approved() -> Weight {
	// 	(149_000_000 as Weight)
	// 		.saturating_add(T::DbWeight::get().reads(5 as Weight))
	// 		.saturating_add(T::DbWeight::get().writes(5 as Weight))
	// }
	// fn cancel_approval() -> Weight {
	// 	(62_000_000 as Weight)
	// 		.saturating_add(T::DbWeight::get().reads(1 as Weight))
	// 		.saturating_add(T::DbWeight::get().writes(1 as Weight))
	// }
	// fn force_cancel_approval() -> Weight {
	// 	(71_000_000 as Weight)
	// 		.saturating_add(T::DbWeight::get().reads(2 as Weight))
	// 		.saturating_add(T::DbWeight::get().writes(1 as Weight))
	// }

    fn force_destroy(_: u32) -> u64 { todo!() }

    fn set_max_zombies() -> u64 { todo!() }
}
