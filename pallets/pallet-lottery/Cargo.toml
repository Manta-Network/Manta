[package]
authors = ["Manta Network"]
description = 'Pallet implementing an APY-maximizing no-loss lottery'
edition = "2021"
homepage = 'https://manta.network'
license = 'GPL-3.0'
name = 'pallet-lottery'
repository = 'https://github.com/Manta-Network/Manta/'
version = '4.6.0'

[dependencies]
codec = { workspace = true }
function_name = { workspace = true }
jsonrpsee = { workspace = true, features = ["server", "macros"], optional = true }
log = { workspace = true }
scale-info = { workspace = true }
serde = { workspace = true, optional = true }

# Substrate dependencies
frame-support = { workspace = true }
frame-system = { workspace = true }
orml-traits = { workspace = true }
sp-api = { workspace = true }
sp-arithmetic = { workspace = true }
sp-blockchain = { workspace = true, optional = true }
sp-core = { workspace = true }
sp-io = { workspace = true }
sp-runtime = { workspace = true }
sp-std = { workspace = true }

# Self dependencies
manta-primitives = { workspace = true }
pallet-farming = { workspace = true }
pallet-parachain-staking = { workspace = true }
runtime-common = { workspace = true }
session-key-primitives = { workspace = true }

# Benchmarking dependencies
frame-benchmarking = { workspace = true, optional = true }
rand = { workspace = true, optional = true }

[dev-dependencies]
calamari-runtime = { workspace = true, feature = ["std"] }
manta-collator-selection = { workspace = true, feature = ["std"] }
pallet-asset-manager = { workspace = true, feature = ["std"] }
pallet-assets = { workspace = true, feature = ["std"] }
pallet-balances = { workspace = true, feature = ["std"] }
pallet-preimage = { workspace = true, feature = ["std"] }
pallet-randomness = { workspace = true, feature = ["std"] }
pallet-scheduler = { workspace = true, feature = ["std"] }
pallet-transaction-payment = { workspace = true, feature = ["std"] }
rand = { workspace = true, feature = ["std"] }
similar-asserts = { workspace = true }
sp-staking = { workspace = true, feature = ["std"] }
xcm = { workspace = true, feature = ["std"] }

[features]
default = ["std"]
# RPC Interface
rpc = [
  "jsonrpsee",
  "sp-blockchain",
]
runtime-benchmarks = [
  'frame-benchmarking/runtime-benchmarks',
  'frame-support/runtime-benchmarks',
  'frame-system/runtime-benchmarks',
  'pallet-parachain-staking/runtime-benchmarks',
  'rand/std_rng',
]
std = [
  "manta-primitives/std",
  "pallet-parachain-staking/std",
  "pallet-randomness/std",
  "session-key-primitives/std",
  "sp-core/std",
  "sp-std/std",
  "sp-io/std",
  "sp-runtime/std",
  "sp-api/std",
  "sp-arithmetic/std",
  "frame-support/std",
  "frame-system/std",
  "serde/std",
  "pallet-farming/std",
  "orml-traits/std",
  "runtime-common/std",
  "codec/std",
  "scale-info/std",
  "log/std",
  "sp-staking/std",
]
try-runtime = [
  "frame-support/try-runtime",
  "frame-system/try-runtime",
]
